name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE: payalyadav02/cicd

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
     
      - name: Prepare test reports directory
        run: mkdir -p reports

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run tests
        run: pytest --junitxml=reports/junit.xml

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: reports/junit.xml

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (optional for cross-arch)
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ github.sha }}
            ${{ env.IMAGE }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decode Kubeconfig and Deploy to Kubernetes
        run: |
          if [ -n "${{ secrets.KUBE_CONFIG }}" ]; then
            echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig
            export KUBECONFIG=$PWD/kubeconfig
            kubectl config current-context
            kubectl set image deployment/cicd-app cicd-app=${{ env.IMAGE }}:${{ github.sha }} -n staging || kubectl apply -f k8s/deployment.yaml -n staging
            kubectl rollout status deployment/cicd-app -n staging --timeout=120s
          else
            echo "KUBE_CONFIG secret is not set."
          fi
